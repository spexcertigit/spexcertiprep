using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Configuration;
using System.Data;

public partial class search : System.Web.UI.Page
{
    protected clsHelper helper;
    protected string promoCode = "WIN13-20";

    protected string SearchTerm = "";
    protected string SearchTermEnc = "";
    protected int EquipTypeCount = 0;
    protected int AccessoryCount = 0;
    protected int ProdResCnt = 0;
    protected int FaqCount = 0;

    protected string Region = "US";
    protected string CurrencySymbol = "$";
    protected string CatCode = "1";
    protected clsUser myUser;

	protected string txtMessage = "";

    protected void Page_Load(object sender, EventArgs e) {
        myUser = new clsUser();
        Region = myUser.Region;
        CurrencySymbol = myUser.CurrencySymbol;
        CatCode = myUser.DiscountCode;
        //Promotion updater...
        helper = new clsHelper();
        lblPromoExpiration.Text = helper.GetPromoExpiration(promoCode);
        lblPromoCode1.Text = promoCode.ToString();
        lblPromoCode2.Text = promoCode.ToString();

        if (!Page.IsPostBack) {
            string SQL = "SELECT DISTINCT cp.cpPart AS PartNumber, " +
                         "       cp.cpDescrip AS Title,  " +
                         "       cv.cpvVolume AS Volume, " +
                         "       cp.cpUnitCnt AS UnitPack, " +
                         "       mat.T542_Sub_Short AS Matrix " +
                         "   FROM  cp_roi_Prods cp LEFT JOIN cp_roi_ProdFamilies pfam ON cp.cpPart = pfam.cpfProdID " +
                         "       LEFT JOIN cp_roi_Volumes AS cv ON cp.Cpvol = cv.cpvID " +
                         "       LEFT JOIN cp_roi_Matrix AS mat ON cp.cpMatrix = mat.T542_Code " +
                         "   WHERE cp.cpPart IN ('S-133','S-133-W10K','S-1885','S-1885-W2K','S-1983','S-1985','S-2050','S-2930','S-2950','S-3035','S-3405','S-3555','S-3586','S-3645','S-4168','S-4183','S-4309','S-4336-20','S-4336-46','S-4336-100','S-4335','S-4335-100','S-5005','S-609','S-905','WINE-1','WINE-2','WINE-3') " +
                         "   AND cp.For_Web = 'Y' " +
                         "   ORDER BY cp.cpPart";

            dataProducts.SelectCommand = SQL;
            dataProducts.DataBind();
        }
    }
    protected string GetCAS(string PartNumber) {
        string CAS = "";

        using (SqlConnection cn = new SqlConnection(ConfigurationManager.ConnectionStrings["SPEXCertiPrep"].ConnectionString)) {
            string SQL = "SELECT count(*) " +
                         "   FROM certiProdComps " +
                         "   WHERE cpmpProd = @partnumber";

            using (SqlCommand cmd = new SqlCommand(SQL, cn)) {
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("@partnumber", SqlDbType.VarChar, 21).Value = PartNumber;
                cmd.Connection.Open();
                int CASCount = (int)cmd.ExecuteScalar();
                cmd.Connection.Close();

                if (CASCount > 1) {
                    CAS = "Various";
                } else if (CASCount == 1) {
                    cmd.CommandText = "SELECT c.cmpCAS " +
                                      "  FROM certiProdComps pc JOIN certiComps c ON pc.cpmpCompID = c.cmpID " +
                                      "  WHERE pc.cpmpProd = @partNumber";
                    cmd.Connection.Open();
                    CAS = cmd.ExecuteScalar().ToString();
                    cmd.Connection.Close();
                }
            }
        }
        return CAS;
    }
    protected string GetConcentration(string PartNumber) {
        string conc = "";

        using (SqlConnection cn = new SqlConnection(ConfigurationManager.ConnectionStrings["SPEXCertiPrep"].ConnectionString)) {
            string SQL = "SELECT count(*) " +
                         "   FROM certiProdComps " +
                         "   WHERE cpmpProd = @partnumber AND cpmpConc IS NOT NULL";

            using (SqlCommand cmd = new SqlCommand(SQL, cn)) {
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("@partnumber", SqlDbType.VarChar, 21).Value = PartNumber;
                cmd.Connection.Open();
                int CASCount = (int)cmd.ExecuteScalar();
                cmd.Connection.Close();

                if (CASCount > 1) {
                    conc = "Various";
                } else if (CASCount == 1) {
                    cmd.CommandText = "SELECT CONVERT(varchar(20), cpc.cpmpConc) + ' ' + cu.cuUnit AS conc " +
                                      "  FROM certiProdComps cpc JOIN certiComps AS cc ON cpc.cpmpCompID = cc.cmpID " +
                                      "      JOIN certiUnits AS cu ON cpc.cpmpUnits = cu.cuID " +
                                      "  WHERE cpc.cpmpConc IS NOT NULL AND cpc.cpmpProd = @partnumber";

                    cmd.Connection.Open();
                    conc = cmd.ExecuteScalar().ToString();
                    cmd.Connection.Close();
                }
            }
        }
        return conc;
    }
    protected string GetConcentrationInorg(string PartNumber) {
        string conc = "";

        using (SqlConnection cn = new SqlConnection(ConfigurationManager.ConnectionStrings["SPEXCertiPrep"].ConnectionString)) {
            string SQL = "SELECT count(*) " +
                         "   FROM certiProdComps " +
                         "   WHERE cpmpProd = @partnumber AND cpmpConc IS NOT NULL";

            using (SqlCommand cmd = new SqlCommand(SQL, cn)) {
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("@partnumber", SqlDbType.VarChar, 21).Value = PartNumber;
                cmd.Connection.Open();
                int CASCount = (int)cmd.ExecuteScalar();
                cmd.Connection.Close();

                if (CASCount > 1) {
                    conc = "Various";
                } else if (CASCount == 1) {
                    cmd.CommandText = "SELECT  CAST(cpc.cpmpConc AS varchar(20)) + ' ' + cu.cuUnit AS conc " +
										"FROM certiProdComps AS cpc JOIN certiUnits AS cu ON cpc.cpmpUnits = cu.cuID " +
										"WHERE cpc.cpmpConc IS NOT NULL " +
										"AND cpc.cpmpProd =  @partnumber";

                    cmd.Connection.Open();
                    conc = cmd.ExecuteScalar().ToString();
                    cmd.Connection.Close();
                }
            }
        }
        return conc;
    }
    protected string GetPrice(string PartNumber) {
        clsItemPrice price = new clsItemPrice(PartNumber, myUser);
        return price.PriceText;
    }
    protected string GetMethod(string PartNumber) {
        string method = "";

        using (SqlConnection cn = new SqlConnection(ConfigurationManager.ConnectionStrings["SPEXCertiPrep"].ConnectionString)) {
            string SQL = "SELECT count(*) " +
                         "   FROM cp_roi_ProdMeths " +
                         "   WHERE cpmProdID = @partnumber";



            using (SqlCommand cmd = new SqlCommand(SQL, cn)) {
                cmd.CommandType = CommandType.Text;
                cmd.Parameters.Add("@partnumber", SqlDbType.VarChar, 21).Value = PartNumber;
                cmd.Connection.Open();
                int MethodCount = (int)cmd.ExecuteScalar();
                cmd.Connection.Close();

                if (MethodCount > 1) {
                    method = "Various";
                } else if (MethodCount == 1) {
                    cmd.CommandText = "SELECT m.cmName " +
                                      "  FROM cp_roi_ProdMeths pm JOIN cp_roi_Methods m ON pm.cpmMethID = m.cmID " +
                                      "  WHERE pm.cpmProdID = @partNumber";


                    cmd.Connection.Open();
				method = cmd.ExecuteScalar().ToString();
				 cmd.Connection.Close();

//					try
//					{
//						method = cmd.ExecuteScalar().ToString();
//					}
//					catch (Exception ex)
//					{
//						return "unknown"; //cmd.CommandText + ":: "  + PartNumber;
//					}
                    

                }
            }
        }
        return method;
    }
}